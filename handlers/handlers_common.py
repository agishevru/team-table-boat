""" –û—Å–Ω–æ–≤–Ω—ã–µ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ö—ç–Ω–¥–ª–µ—Ä—ã –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é (/menu) """
import re
from typing import Dict, List, Tuple, Union

from aiogram import Router, F
from aiogram.types import Message, FSInputFile
from aiogram.filters import Command, CommandStart, StateFilter
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy.future import select

from keyboards.in_keyboard_look_table import keyboard_look_table
from keyboards.in_keyboard_menu import keyboard_main, keyboard_back
from log_settings import log
from keyboards.in_keyboard_add_dell_table import add_xlsx1
from models.db import Users
from models.models_utils import get_or_create_user, get_all_table
from utils.all import open_profile, months_dict
from utils.exel_reader import save_google_sheet_locally, get_today_employees

router = Router()


@router.message(CommandStart())
async def start(message: Message, user: str, session: AsyncSession) -> None:
    """ –°—Ç–∞—Ä—Ç –±–æ—Ç–∞ """
    log.warning(f'user - /start')
    # —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await get_or_create_user(message, session)
    await message.answer('üë∑üèª‚Äç‚ôÇÔ∏è –í—ã –∑–∞–ø—É—Å—Ç–∏–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞–±–æ—á–∏—Ö —Å–º–µ–Ω:\n'
                         '- –∏–∑ —Ñ–∞–π–ª–æ–≤ .xlsx\n'
                         '- –∏–∑ –æ–Ω–ª–∞–π–Ω —Ç–∞–±–ª–∏—Ü Google sheets\n\n'
                         '–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /menu\n')

@router.message(Command('menu'), StateFilter(None))
async def cmd_menu(message: Message, user: str, session: AsyncSession, edit_message: bool = False):
    """ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞ """
    log.warning(f'user - /menu')
    text = ('<code>'
            '~~~~~~~~~~~~~~~~~~~~~~~~~\n'
            '|   –í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ   |\n'
            '~~~~~~~~~~~~~~~~~~~~~~~~~\n\n'
            '</code>\n')
    if edit_message is True:
        return await message.edit_text(text=text, reply_markup=keyboard_main())
    await message.answer(text=text, reply_markup=keyboard_main())


async def cmd_look_table(message: Message, user: str, session: AsyncSession, edit_message: bool = False) -> None:
    """ –ü—É–Ω–∫—Ç –º–µ–Ω—é –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–∞–±–ª–∏—Ü—ã.  """
    log.warning(f'user look_table')
    tables: List[Tuple[str, str]] = await get_all_table(session=session)
    if tables:
        months: Dict[str, str] = months_dict
        await message.edit_text(
            f'üìã –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≥—Ä–∞—Ñ–∏–∫–∏ –∑–∞ <code>[ {" ".join([months[n[0]] for n in tables])} ]</code>.\n'
            f'–ß—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω—É–∂–Ω—ã–π, –≤—ã–±–µ—Ä–µ—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.',
            reply_markup=keyboard_look_table(storage_list=tables))



async def cmd_load(message: Message, user: str, session: AsyncSession, edit_message: bool = False):
    log.warning(f'user get load table')
    await message.edit_text('üë∑üèª‚Äç‚ôÇÔ∏è –î–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç–∞–±–ª–∏—Ü—ã - –∑–∞–≥—Ä—É–∑–∏—Ç–µ –µ–µ —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º üëá',
                            reply_markup=add_xlsx1())



async def cmd_go(message: Message, user: str, session: AsyncSession, edit_message: bool = False):
    """ –í—ã–≤–æ–¥ —Å–º–µ–Ω—ã """
    await message.edit_text(f'ü•∑ –ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∑–∞–ø—Ä–æ—Å, —Ç–∞–±–ª–∏—Ü–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å\n'
                            f'—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É –º–µ–Ω—é\n'
                            f'<code>'
                            f'--------------------\n'
                            f'|–ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É|\n'
                            f'--------------------</code>\n\n'
                            f'üîç –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–æ—Å—Ç–∞–≤ —Å–º–µ–Ω—ã, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ <i>—á–∏—Å–ª–æ.–º–µ—Å—è—Ü</i>\n'
                            f'<code>–ü—Ä–∏–º–µ—Ä</code>: <i>31.12</i>')



@router.message(F.text.regexp(re.compile(r'(\d{2}\.\d{2})')), StateFilter(None))
async def cmd_get(message: Message, user: str, session: AsyncSession):
    """ –ß—Ç–µ–Ω–∏—Ü–µ —Ç–∞–±–ª–∏—Ü—ã """
    log.warning(f'user get {message.text}')
    date: str = message.text
    day: str = date.split('.')[0]
    month: str = date.split('.')[1]
    pattern = r'\b(?:0[1-9]|[12]\d|3[01])\b'  # –ó–∞–±–∏—Ä–∞–µ—Ç —Ü–∏—Ñ—Ä—É –æ—Ç 01 –¥–æ 31
    day_accept: str = ''.join(re.findall(pattern, day))
    if not day_accept:
        return await message.answer(f'‚ùå –î–µ–Ω—å {day} –≤–≤–µ–¥–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. –í–≤–µ–¥–∏—Ç–µ –¥–≤—É—Ö–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä 01.01')
    # –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –∏–∑ —Å—Å—ã–ª–∫–∏ (–∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≤ –±–¥ –∑–∞ –Ω—É–∂–Ω—ã–π –º–µ—Å—è—Ü)

    file: Union[str, bool] = await save_google_sheet_locally(month=month, session=session)
    employees = await get_today_employees(file_path=file, day=day)
    await message.answer(employees)


async def cmd_help(message: Message, user: str, session: AsyncSession, edit_message: bool = False):
    log.warning(f'user - /help')
    text = (f'üìÜ –í—ã –∑–∞–ø—É—Å—Ç–∏–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞–±–æ—á–∏—Ö —Å–º–µ–Ω:\n'
            f'- –∏–∑ —Ñ–∞–π–ª–æ–≤ .xlsx\n'
            f'- –∏–∑ –æ–Ω–ª–∞–π–Ω —Ç–∞–±–ª–∏—Ü Google sheets\n\n'
            f'–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ—Å—Ç–∞–≤–µ —Å–º–µ–Ω—ã - —Ç–∞–±–ª–∏—Ü—É –Ω—É–∂–Ω–æ —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å, –≤—ã–±—Ä–∞–≤ –≤ –º–µ–Ω—é '
            f'<b>|–∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É|</b>\n\n'
            f'–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫—Ç–æ –≤—ã—Ö–æ–¥–∏—Ç –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –¥–µ–Ω—å\n'
            f'–≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É: <b>|01.01|</b>\n\n'
            f'–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞, –≤—ã–±–µ—Ä–µ—Ç–µ\n'
            f'<b>|–ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π|</b>')
    if edit_message is True: await message.edit_text(text=text, reply_markup=keyboard_back())
    else: await message.answer(text=text, reply_markup=keyboard_back())


async def cmd_users(message: Message, user: str, session: AsyncSession, edit_message: bool = False):
    """ –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Å–ø–∏—Å–∫–∞ c —Å—Å—ã–ª–∫–æ–π –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å """
    log.warning(f'user watch all users')
    query = await session.execute(select(Users))
    users = query.scalars()
    text = '–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–æ—Ç–∞:\n'
    text += "\n".join(f"{open_profile(user.user_id, 'üë§')} <code>{user.username}</code>" for user in users)
    if edit_message is True:
        await message.edit_text(text)
    else: await message.answer(text)


async def cmd_example(message: Message, user: str, session: AsyncSession, edit_message: bool = False):
    log.warning(f'user get example table')
    instruction: str = ('–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –±–æ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Å—á–∏—Ç–∞–ª –¥–∞–Ω–Ω—ã–µ, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–∞–Ω–Ω—ã–º —à–∞–±–ª–æ–Ω–æ–º.'
                        '–ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–¥–µ–ª–∏—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏, –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã–µ –∑–∞–≥–ª–∞–≤–Ω—ã–º–∏ –±—É–∫–≤–∞–º–∏ –≤ –Ω–∞–∑–≤–∞–Ω–∏—è –æ—Ç–¥–µ–ª–æ–≤.')
    await message.edit_text(f'{instruction}', reply_markup=keyboard_back())
    table_from_local = FSInputFile("example_table.xlsx")
    result = await message.answer_document(
        table_from_local,
        caption="–®–∞–±–ª–æ–Ω –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è"
    )
    # file_ids.append(result.document.file_id)



