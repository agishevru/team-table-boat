""" –°—Ü–µ–Ω–∞—Ä–∏–∏ """
import os
from typing import Tuple, List, Dict

from aiogram import Router, F
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from aiogram.filters import Command, StateFilter
from aiogram.types import Message, ReplyKeyboardRemove, CallbackQuery
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy.future import select

from handlers.handlers_common import cmd_menu
from keyboards.in_keyboard_add_dell_table import keyboard_months, keyboard_cancel, kb_yes_no
from models.db import UrlGoogleSheets_month
from models.models_utils import get_all_table, delete_table
from utils.exel_reader import save_google_sheet_locally
from utils.all import months_dict
from log_settings import log

router = Router()


@router.callback_query(~StateFilter(None), F.data == 'menu')
async def cancel_state_and_go_menu(callback: CallbackQuery, user: str, state: FSMContext, session: AsyncSession):
    """ –ö–Ω–æ–ø–∫–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–∑ –ª—é–±–æ–≥–æ —Å—Ç–µ–π—Ç–∞ """
    log.warning(f'user cansel state [{state}]')
    await callback.answer()
    await state.clear()
    await cmd_menu(message=callback.message, user=user, session=session, edit_message=True)


# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –≥—É–≥–ª —à–∏—Ç—Å
class SaveUrlTable(StatesGroup):
    """ –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Å—ã–ª–æ–∫ –Ω–∞ —Ç–∞–±–ª–∏—Ü—ã """
    get_month = State()
    load_url = State()

@router.callback_query(F.data == 'save_url', StateFilter(None))
async def choose_save_url(callback: CallbackQuery, user: str, state: FSMContext, session: AsyncSession):
    """ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ google sheets"""
    log.warning(f'user clicked [save_url]')
    await callback.answer()
    await callback.message.edit_text('üèó –í—ã–±–µ—Ä–µ—Ç–µ –º–µ—Å—è—Ü, –∑–∞ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫\n', reply_markup=keyboard_months())
    #—Å—Ç–∞–≤–∏–º —Å—Ç–µ–π—Ç –≤—ã–±–æ—Ä –º–µ—Å—è—Ü–∞
    await state.set_state(SaveUrlTable.get_month)

@router.callback_query(StateFilter(SaveUrlTable.get_month))
async def choose_month(callback: CallbackQuery, user: str, state: FSMContext, session: AsyncSession):
    """ –ó–∞–ø–∏—Å—å –≤ –±–¥ –º–µ—Å—è—Ü–∞ """
    log.warning(f'user choose for save_url [{callback.data.split()[0]} month]')
    await callback.answer()
    months: Dict[str, str] = months_dict
    await callback.message.edit_text(f'üë∑üèª‚Äç‚ôÇÔ∏è –û—Ç–ª–∏—á–Ω–æ, –≤—ã–±—Ä–∞–Ω <code>{months[callback.data]}</code>\n'
                                     f'‚õì –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–∞–±–ª–∏—Ü—É Google Sheets')
    # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –º–µ—Å—è—Ü
    await session.merge(UrlGoogleSheets_month(month=callback.data))
    await session.commit()
    # –ø–µ—Ä–µ–¥–∞–µ–º –≤ —Å—Ç–µ–π—Ç –º–µ—Å—è—Ü –∏ –º–µ–Ω—è–µ–º –µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.update_data(month=callback.data)
    await state.set_state(SaveUrlTable.load_url)


@router.message(StateFilter(SaveUrlTable.load_url))
async def save_url(message: Message, user: str, state: FSMContext, session: AsyncSession):
    """ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ """
    user_data: Dict[str, str] = await state.get_data()
    months: Dict[str, str] = months_dict
    month: str = user_data['month']     # 01-31
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Å—ã–ª–∫–∏
    file = await save_google_sheet_locally(google_sheets_url=message.text, session=session)
    if file:
        log.warning(f'user save url: [{message.text}]')
        await message.answer(f'üè° –¢–∞–±–ª–∏—Ü–∞ –∑–∞ {months[user_data["month"]]} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.\n'
                             f'–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–æ—Å—Ç–∞–≤ —Å–º–µ–Ω—ã, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ <i>—á–∏—Å–ª–æ.–º–µ—Å—è—Ü</i>\n'
                             f'<code>–ü—Ä–∏–º–µ—Ä</code>: <i>31.12</i>')
        await session.merge(UrlGoogleSheets_month(month=month, url_google_sheets=message.text, path_file=None))
        await session.commit()
        await state.clear()
    else:
        await message.answer('üöß –ü–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É.\n'
                             '–°—Å—ã–ª–∫–∞ –¥–æ–ª–∂–Ω–∞ –∏–º–µ—Ç—å –≤–∏–¥:\n'
                             '<b>https://docs.google.com/spreadsheets/d/1O8Zssdfsdf453454jkl5j34/edit#gid=0</b>\n'
                             '–ì–¥–µ <code>1O8Zssdfsdf453454jkl5j34</code> - –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≤–∞—à–µ–π —Ç–∞–±–ª–∏—Ü—ã\n'
                             '–ê –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ –≤—ã—à–µ.',
                             reply_markup=keyboard_cancel())

@router.callback_query(~StateFilter(None), F.data == 'cancel')
async def cancel(callback: CallbackQuery, user: str, state: FSMContext, session: AsyncSession):
    """ –í—ã—Ö–æ–¥ –∏–∑ –ª—é–±–æ–≥–æ —Å—Ç–µ–π—Ç–∞ """
    log.warning(f'user cancel state {await state.get_state()}')
    user_data: Dict[str, str] = await state.get_data()
    months: Dict[str, str] = months_dict
    month: str = user_data['month']  # 01-31
    await state.clear()
    text = callback.message.text
    await callback.message.edit_text(text)
    await callback.message.answer('üîò –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —Å—Ü–µ–Ω–∞—Ä–∏–π')
    await delete_table(user=user, session=session, current_month=month)



# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ —Ç–∞–±–ª–∏—Ü—ã
class SaveFileTable(StatesGroup):
    """ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ —Ç–∞–±–ª–∏—Ü—ã """
    get_month = State()
    load_url = State()

@router.callback_query(F.data == 'save_file', StateFilter(None))
async def choose_save_file(callback: CallbackQuery, user: str, state: FSMContext, session: AsyncSession):
    """ –í—ã–±–æ—Ä –º–µ—Å—è—Ü–∞"""
    log.warning(f'user clicked [choose_save_file]')
    await callback.answer()
    await callback.message.edit_text('üèó –í—ã–±–µ—Ä–µ—Ç–µ –º–µ—Å—è—Ü, –∑–∞ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫\n', reply_markup=keyboard_months())
    #—Å—Ç–∞–≤–∏–º —Å—Ç–µ–π—Ç –≤—ã–±–æ—Ä –º–µ—Å—è—Ü–∞
    await state.set_state(SaveFileTable.get_month)

@router.callback_query(StateFilter(SaveFileTable.get_month), F.data == 'yes')
async def save_month(callback: CallbackQuery, user: str, state: FSMContext, session: AsyncSession):
    """ –ó–∞–º–µ–Ω–∞ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª """
    log.warning(f'user replace url to file')
    await callback.answer()
    months: Dict[str, str] = months_dict
    user_data: Dict[str, str] = await state.get_data()
    month = user_data['month']
    await session.merge(UrlGoogleSheets_month(month=month))
    await session.commit()
    # –ø–µ—Ä–µ–¥–∞–µ–º –≤ —Å—Ç–µ–π—Ç –º–µ—Å—è—Ü –∏ –º–µ–Ω—è–µ–º –µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.set_state(SaveFileTable.load_url)
    await callback.message.edit_text(f'üë∑üèª‚Äç‚ôÇÔ∏è –û—Ç–ª–∏—á–Ω–æ, –≤—ã–±—Ä–∞–Ω <code>{months[month]}</code>\n'
                                     f'‚õì –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ Exel —Ñ–∞–π–ª —Å –≥—Ä–∞—Ñ–∏–∫–æ–º.\n'
                                     f'(–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å .xlsx)')


@router.callback_query(StateFilter(SaveFileTable.get_month))
async def choose_month(callback: CallbackQuery, user: str, state: FSMContext, session: AsyncSession):
    """ –ó–∞–ø–∏—Å—å –≤ –±–¥ –º–µ—Å—è—Ü–∞ """
    log.warning(f'user choose for save_url [{callback.data.split()[0]} month]')
    await callback.answer()
    months: Dict[str, str] = months_dict
    # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –º–µ—Å—è—Ü
    await state.update_data(month=callback.data)
    query = await session.execute(select(UrlGoogleSheets_month).filter_by(month=callback.data))
    row = query.scalar()
    if row:
        return await callback.message.answer(
            f'–ó–∞ –º–µ—Å—è—Ü <code>{months[callback.data]}</code> —É–∂–µ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ Google Sheets. '
            f'–ñ–µ–ª–∞–µ—Ç–µ –∑–∞–º–µ–Ω–∏—Ç—å –µ–µ –Ω–∞ —Ñ–∞–π–ª?',
            reply_markup=kb_yes_no()
        )
    else:
        await session.merge(UrlGoogleSheets_month(month=callback.data))
        await session.commit()
        # –ø–µ—Ä–µ–¥–∞–µ–º –≤ —Å—Ç–µ–π—Ç –º–µ—Å—è—Ü –∏ –º–µ–Ω—è–µ–º –µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.set_state(SaveFileTable.load_url)
        await callback.message.edit_text(f'üë∑üèª‚Äç‚ôÇÔ∏è –û—Ç–ª–∏—á–Ω–æ, –≤—ã–±—Ä–∞–Ω <code>{months[callback.data]}</code>\n'
                                         f'‚õì –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ Exel —Ñ–∞–π–ª —Å –≥—Ä–∞—Ñ–∏–∫–æ–º.\n'
                                         f'(–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å .xlsx)')


@router.message(StateFilter(SaveFileTable.load_url), F.document)
async def save_file(message: Message, user: str, state: FSMContext, session: AsyncSession):
    """ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ """
    user_data: Dict[str, str] = await state.get_data()
    months: Dict[str, str] = months_dict
    month: str = user_data['month']     # 01-31

    path = os.path.join(os.path.abspath('files'), f'{month}_month.xlsx')
    file = await message.bot.download(message.document, destination=path)
    await session.merge(UrlGoogleSheets_month(month=month, url_google_sheets=None, path_file=path))
    await session.commit()
    await state.clear()
    await message.answer(f'üè° –¢–∞–±–ª–∏—Ü–∞ –∑–∞ {months[user_data["month"]]} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.\n'
                         f'–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–æ—Å—Ç–∞–≤ —Å–º–µ–Ω—ã, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ <i>—á–∏—Å–ª–æ.–º–µ—Å—è—Ü</i>\n'
                         f'<code>–ü—Ä–∏–º–µ—Ä</code>: <i>31.12</i>')
    log.warning(f'user save file: [{path}]')






# –£–¥–∞–ª–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏
class DeleteTable(StatesGroup):
    """ –£–¥–∞–ª–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –º–µ—Å—è—Ü """
    waite_month = State()

@router.callback_query(F.data == 'del_table')
async def choose_month(callback: CallbackQuery, user: str, state: FSMContext, session: AsyncSession):
    """ –í—ã–±–æ—Ä –º–µ—Å—è—Ü–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã """
    log.warning(f'user [{user}] start state DeleteTable')
    await callback.answer()
    await state.set_state(DeleteTable.waite_month)
    # –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –º–µ—Å—è—Ü—ã
    tables: List[Tuple[str, str]] = await get_all_table(session=session)
    months_list: List[str] = [row[0] for row in tables]     # ['01','02'..]
    await callback.message.edit_text(
        'üë∑üèª‚Äç‚ôÇÔ∏è –ó–∞ –∫–∞–∫–æ–π –º–µ—Å—è—Ü —É–¥–∞–ª–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É?',
        reply_markup=keyboard_months(current_months=months_list))

@router.callback_query(StateFilter(DeleteTable.waite_month))
async def del_month(callback: CallbackQuery, user: str, state: FSMContext, session: AsyncSession):
    """ –£–¥–∞–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã """
    await callback.answer()
    months: Dict[str, str] = months_dict
    current_month: str = callback.data  # 01-31
    alias_month = months[current_month]
    if await delete_table(user=user, session=session, current_month=current_month):
        await callback.message.edit_text(f'üóë –¢–∞–±–ª–∏—Ü–∞ –∑–∞ {alias_month} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –ø–∞–º—è—Ç–∏')
        log.warning(f'user [{user}] successfully delete table [{current_month} month]')
    else:
        await callback.message.edit_text(f'üöß –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∑–∞ {alias_month}. '
                                         f'–ü—Ä–æ—Å—Ç–æ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É, —á–µ—Ä–µ–∑ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å '
                                         f'–¥–∞–Ω–Ω—ã–µ.')
        log.warning(f'user [{user}] unable delete table [{current_month} month]')
    await state.clear()



